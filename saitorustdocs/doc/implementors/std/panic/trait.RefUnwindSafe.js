(function() {var implementors = {};
implementors["saito_rust"] = [{"text":"impl RefUnwindSafe for Block","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockBody","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BlockHeader","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for BurnFee","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadablePublicKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadablePrivateKey","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Hop","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Mempool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Slip","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SlipBody","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SlipBroadcastType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SlipSpentStatus","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionBroadcastType","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionBody","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Transaction","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()