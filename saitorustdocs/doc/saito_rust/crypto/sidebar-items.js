initSidebarItems({"fn":[["generate_keys",""],["generate_random_data",""],["hash",""],["sign",""],["thread_rng","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`."]],"static":[["SHA256","SHA-256 as specified in FIPS 180-4."]],"struct":[["Context","A context for multi-step (Init-Update-Finish) digest calculations."],["MerkleTree","A Merkle tree is a binary tree, with values of type `T` at the leafs, and where every internal node holds the hash of the concatenation of the hashes of its children nodes."],["Message","A (hashed) message input to an ECDSA signature"],["PublicKey","A Secp256k1 public key, used for verification of signatures"],["ReadablePrivateKey",""],["ReadablePublicKey",""],["Secp256k1","The secp256k1 engine, used to execute all signature operations"],["SecretKey","Secret 256-bit key used as `x` in an ECDSA signature"],["Signature","An ECDSA signature"]],"trait":[["Hashable","The type of values stored in a `MerkleTree` must implement this trait, in order for them to be able to be fed to a Ring `Context` when computing the hash of a leaf."],["Rng","A random number generator."],["ToBase58","A trait for converting a value to base58 encoded string."]]});